# First template  : {{ ansible_managed }}
# Second template : consul template

# Info on config http://www.haproxy.org/download/1.5/doc/configuration.txt
{% macro flatten_value(key, value) -%}
{%- if value is string -%}{# Value is a string #}
    {{ key }}    {{ value }}
{%- elif value is iterable -%}{# Value is a list #}
{% for nested_value in value %}
    {{ key }}    {{ nested_value }}
{% endfor %}
{%- endif -%}
{%- endmacro %}

global
    daemon
    spread-checks 2
    user    {{ consul_haproxy_user }}
    group   {{ consul_haproxy_user }}
    maxconn {{ consul_haproxy_maxconn }}
{# TODO: find a way around it. Horrible hack to avoid having alpine install rsyslog #}
{{ flatten_value('log', consul_haproxy_log) if ansible_distribution == 'Ubuntu' else '' }}
    stats  {{ consul_haproxy_stats_socket }}
{% if consul_haproxy_extra_global is defined %}
{% for key, value in consul_haproxy_extra_global.iteritems() %}
    {{ key }}  {{ value }}
{% endfor %}
{% endif %}

defaults
{{ flatten_value('log', consul_haproxy_default_log) }}
{{ flatten_value('option', consul_haproxy_default_options) }}
{{ flatten_value('maxconn', consul_haproxy_default_maxconn) }}
{{ flatten_value('timeout', consul_haproxy_default_timeout) }}
{{ flatten_value('retries', consul_haproxy_default_retries) }}
{{ flatten_value('balance', consul_haproxy_default_balance) }}
{% if consul_haproxy_extra_default is defined %}
{% for key, value in consul_haproxy_extra_default.iteritems() %}
    {{ key }}  {{ value }}
{% endfor %}
{% endif %}

{% if consul_haproxy_stats_enable == True %}
listen stats
    bind {{ consul_haproxy_stats_add | default("127.0.0.1") }}:{{ consul_haproxy_stats_port }}
    mode {{ consul_haproxy_stats_mode }}
    stats enable
    stats uri {{ consul_haproxy_stats_uri }}
{% endif %}

# consul_services
{% if consul_consumer_services is defined %}
{% for consumer_service in consul_consumer_services %}
{% if consumer_service is mapping %}
{# Support new style of config #}
{% set service_name = consumer_service.name %}
{% else %}
{% set service_name = consumer_service %}
{% endif %}

{% set env_name = consumer_service.environment_override | default(false) %}

{% if not env_name %}
{% if environment_name is defined %}
    {% set env_name = environment_name %}
{% else %}
    {% set env_name = fallback_environment %}
{% endif %}
{% endif %}

{% set tags_contains = consumer_service.tags_contains | default(false) %}
{% set tag_regex = consumer_service.tag_regex | default(false) %}
{% set haproxy_setting = consul_services[service_name].haproxy | default({}) %}
# Service Config for {{ service_name }}
backend {{ service_name }}
    mode {{ haproxy_setting.service_mode | default('http') }}
    <% scratch.Set "serviceFound" "False" -%>
    <% scratch.Set "localPort" "{{ consul_services[service_name].local_port | default(consul_services[service_name].port) }}" -%>
    <% range service "{{ service_name }}{{ consul_template_service_options_str }}" -%>
    <% scratch.Set "weightValue" "100" -%>
    <% range .Tags -%>
    <% if . | contains "WEIGHT:" -%>
    <% $weightValue := . | split ":" -%>
    <% $weightValue := index $weightValue 1 -%>
    <% scratch.Set "weightValue" $weightValue -%>
    <% end -%>
    <% if . | contains "local_port:" -%>
    <% $localPort := . | split ":" -%>
    <% $localPort := index $localPort 1 -%>
    <% scratch.Set "localPort" $localPort -%>
    <% end -%>
    <% end -%>
    <% if .Tags | contains "env:{{ env_name }}" -%> # Match envrionment tag
    <% scratch.Set "serviceFound" "True" -%>
{% if tags_contains %}<%if .Tags | contains "{{ tags_contains}}"%> # Match tags_contains {{ tags_contains }}{% endif %}
{% if tag_regex %}<%if .Tags | join " "  | regexMatch "{{ tag_regex }}"%> # Match tag_regex {{ tag_regex }}{% endif %}
    server <%.ID%>_<%.Address%>:<%.Port%> <%.Address%>:<%.Port%> {% if consul_haproxy_default_balance == 'roundrobin' %}weight <% scratch.Get "weightValue" %> {% endif %} {{ haproxy_setting.server_options | default(consul_haproxy_default_server_options) }}
{% if tag_regex %}<%else%> # Did not match tag_regex {{ tag_regex }}<%end%>{% endif %}
{% if tags_contains %}<%else%> # Did not match tags_contains {{ tags_contains }}<%end%>{% endif %}
    <%end%>
    <% end -%>
    <% $serviceFound := scratch.Get "serviceFound" -%>
    <% if eq $serviceFound "False" -%>
    <% range service "{{ service_name }}-{{ env_name }}{{ consul_template_service_options_str }}" %>
    <% scratch.Set "weightValue" "100" -%>
    <% range .Tags -%>
    <% if . | contains "WEIGHT:" -%>
    <% $weightValue := . | split ":" -%>
    <% $weightValue := index $weightValue 1 -%>
    <% scratch.Set "weightValue" $weightValue -%>
    <% end -%>
    <% if . | contains "local_port:" -%>
    <% $localPort := . | split ":" -%>
    <% $localPort := index $localPort 1 -%>
    <% scratch.Set "localPort" $localPort -%>
    <% end -%><% end -%>
    <% scratch.Set "serviceFound" "True" -%>
{% if tags_contains %}<%if .Tags | contains "{{ tags_contains}}"%> # Match tags_contains {{ tags_contains }}{% endif %}
{% if tag_regex %}<%if .Tags | join " "  | regexMatch "{{ tag_regex }}"%> # Match tag_regex {{ tag_regex }}{% endif %}
    server <%.ID%>_<%.Address%>:<%.Port%> <%.Address%>:<%.Port%> {% if consul_haproxy_default_balance == 'roundrobin' %}weight <% scratch.Get "weightValue" %> {% endif %} {{ haproxy_setting.server_options | default(consul_haproxy_default_server_options) }}
{% if tag_regex %}<%else%> # Did not match tag_regex {{ tag_regex }}<%end%>{% endif %}
{% if tags_contains %}<%else%> # Did not match tags_contains {{ tags_contains }}<%end%>{% endif %}
    <%- end %>
    <%- end %>
frontend {{ service_name }}
    mode {{ haproxy_setting.service_mode | default('http') }}
    bind localhost:<% scratch.Get "localPort" %>
    default_backend {{ service_name }}
{% endfor %}
{% endif %}
