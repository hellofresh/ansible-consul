---

- name: install | consul template | Check template binary
  stat:
    path="{{ consul_bin_dir }}/consul-template-{{ consul_template_version }}"
  register: consul_template_version_binary

- name: install | consul template | Ensure download directory exists
  file:
    path="{{ consul_tmp_dir }}/consul-template-{{ consul_template_version }}"
    state=directory
    mode=0755

- name: install | consul template | Download and unpack consul--template archive (if needed)
  unarchive:
    src="{{ consul_template_download_url }}"
    dest="{{ consul_tmp_dir }}/consul-template-{{ consul_template_version }}"
    copy=false
    owner="{{ consul_user }}"
  register: template_download
  ignore_errors: true
  when: not consul_template_version_binary.stat.exists

- name: install | consul template | Download and unpack consul archive (if needed with curl)
  shell: |
          curl -s {{ consul_template_download_url }} -o {{ consul_tmp_dir }}/consul-template-{{ consul_template_version }}/consul-template.zip
          unzip {{ consul_tmp_dir }}/consul-template-{{ consul_template_version }}/consul-template.zip -d {{ consul_tmp_dir }}/consul-template-{{ consul_template_version }}/
  when: template_download | failed

- name: install | consul template | link binary (if needed)
  command: mv {{ consul_tmp_dir }}/consul-template-{{ consul_template_version }}/consul-template {{ consul_bin_dir }}/consul-template-{{consul_template_version}}
  when: not consul_template_version_binary.stat.exists
  notify:
    - restart consul service

- name: install | consul template | Check target file
  stat:
    path="{{ consul_bin_dir }}/consul-template"
  register: consul_template_target_link

- name: install | consul template | Remove target file (if not symlink)
  file:
    path="{{ consul_bin_dir }}/consul-template"
    state="absent"
  when: not consul_template_target_link.stat.islnk is defined or not consul_template_target_link.stat.islnk

- name: install | consul template | Consul template link binary
  file:
    src="{{ consul_bin_dir }}/consul-template-{{ consul_template_version }}"
    dest="{{ consul_bin_dir }}/consul-template"
    state="link"
  notify:
    - restart consul service

- name: install | consul template | Ensure consul-template configuration file is deployed
  template:
    src="consul-template.json.j2"
    dest="{{ consul_config_template_file }}"
    owner="{{ consul_user }}"
    group="{{ consul_group }}"
    mode="0640"
  notify:
    - restart consul-template service

- name: install | consul template | Ensure consul run script is deployed
  template:
    src="consul-template-run.sh.j2"
    dest="{{ consul_bin_dir }}/consul-template-run.sh"
    owner="{{ consul_user }}"
    group="{{ consul_group }}"
    mode="0755"
  notify:
    - restart consul-template service

- name: install | consul template | Ensure consul init.d script is deployed
  template:
    src="consul-template-init.d.sh.j2"
    dest="/etc/init.d/consul-template"
    owner="{{ consul_user }}"
    group="{{ consul_group }}"
    mode="0755"
  when: "consul_service == 'service'"
  notify:
    - restart consul-template service

  # s6 service Block
- block:
  - name: install | consul template | Ensure consul-template s6 service directory exisit
    file:
      path="{{ item }}"
      state="directory"
      owner="{{ consul_user }}"
      group="{{ consul_group }}"
      mode=0755
    with_items:
     - "{{ consul_s6_servicedir }}/consul-template"
     - "{{ consul_s6_servicedir }}/consul-template/log"

  - name: install | consul template | Ensure consul-template s6 logs directory exisit
    file:
      path="/var/log/s6-consul-template"
      state="directory"
      owner="nobody"
      group="nobody"
      mode=0755

  - name: install | consul template | Ensure consul s6 script is deployed
    template:
      src="{{ item.src }}"
      dest="{{ item.dest }}"
      owner="{{ consul_user }}"
      group="{{ consul_group }}"
      mode="0755"
    with_items:
        - { src: "consul-template-s6.j2", dest: "{{ consul_s6_servicedir }}/consul-template/run"}
        - { src: "s6-log.j2", dest: "{{ consul_s6_servicedir }}/consul-template/log/run", log_dir: "/var/log/s6-consul-template", log_user: "consul"}
    notify:
      - restart consul service

  when: "consul_service == 's6'"

- name: install | consul template | Ensure templates is deployed
  template:
    src="{{ item.jtemplate }}"
    dest="{{ item.source }}"
    owner="{{ consul_user }}"
    group="{{ consul_group }}"
    mode="0755"
  with_items: "{{ consul_template_templates }}"
  notify:
    - restart consul-template service
    - reload haproxy service

- name: install | consul template | Ensure HAProxy reload script is deployed
  template:
    src="haproxy-reload.j2"
    dest="{{ consul_bin_dir }}/haproxy-reload"
    owner="{{ consul_user }}"
    group="{{ consul_group }}"
    mode="0755"
  notify:
    - restart consul-template service
    - reload haproxy service

- name: install | consul template | Ensure sudoers file to allow consul template to reload haproxy
  template:
   src="consul-template-sudo.j2"
   dest="/etc/sudoers.d/{{ consul_user }}"
   owner="root"
   group="root"
   mode="0440"
   validate='visudo -cf %s'